{
	"info": {
		"_postman_id": "baa36122-5fd7-4a50-88b9-f79c3b13604e",
		"name": "AssetTable",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20806780"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Authentication",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Get access token has value\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('access_token');\r",
									"   pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{sa_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{sa_client_secret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{idp}}/connect/token",
							"host": [
								"{{idp}}"
							],
							"path": [
								"connect",
								"token"
							]
						},
						"description": "Connect to the IDP and get the access token"
					},
					"response": []
				},
				{
					"name": "Mockup request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Mock request status code should equal 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const json = pm.response.json();\r",
									"    const args_automationTest = json.args.automationTest;\r",
									"    pm.environment.set(\"tenant_name\", args_automationTest);\r",
									"    pm.environment.set(\"location_name\", args_automationTest);\r",
									"\r",
									"    const args_tablename = json.args.tablename;\r",
									"    pm.environment.set(\"table_name_1\", args_tablename);\r",
									"\r",
									"    const args_asset_level1_name = json.args.asset_level1_name;\r",
									"    pm.environment.set(\"asset_level1_name\", args_asset_level1_name);\r",
									"    const args_asset_level2_name = json.args.asset_level2_name;\r",
									"    pm.environment.set(\"asset_level2_name\", args_asset_level2_name);\r",
									"    const args_asset_level3_name = json.args.asset_level3_name;\r",
									"    pm.environment.set(\"asset_level3_name\", args_asset_level3_name);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mockup-service}}/get?automationTest=automation_test&tablename=tbname_{{$timestamp}}&asset_level1_name=a_lv1_{{$timestamp}}&asset_level2_name=a_lv2_{{$timestamp}}&asset_level3_name=a_lv3_{{$timestamp}}",
							"host": [
								"{{mockup-service}}"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "automationTest",
									"value": "automation_test"
								},
								{
									"key": "tablename",
									"value": "tbname_{{$timestamp}}"
								},
								{
									"key": "asset_level1_name",
									"value": "a_lv1_{{$timestamp}}"
								},
								{
									"key": "asset_level2_name",
									"value": "a_lv2_{{$timestamp}}"
								},
								{
									"key": "asset_level3_name",
									"value": "a_lv3_{{$timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has data\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('id');\r",
									"    const upn = jsonData.upn;\r",
									"    pm.environment.set(\"upn\", upn);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{user-service}}/usr/users/info?forceUpdate=true",
							"host": [
								"{{user-service}}"
							],
							"path": [
								"usr",
								"users",
								"info"
							],
							"query": [
								{
									"key": "forceUpdate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Asset (level 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Request has response\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property('data').to.be.a(\"array\");\r",
									"    const data_0_values_id = json.data[0].values.id;\r",
									"    const data_0_values_name = json.data[0].values.name;\r",
									"    pm.environment.set(\"asset_level1_id\", data_0_values_id);\r",
									"    pm.environment.set(\"asset_level1_name\", data_0_values_name);\r",
									"    pm.environment.set(\"asset_id\", data_0_values_id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/\",\r\n        \"type\": \"editing\",\r\n        \"key\": \"ID_TEMP_1\",\r\n        \"parentId\": \"__no_parent_element__\",\r\n        \"assetTemplateId\": null,\r\n        \"name\": \"{{asset_level1_name}}\",\r\n        \"deleted\": false,\r\n        \"value\": {\r\n            \"children\": [],\r\n            \"parentId\": \"__no_parent_element__\",\r\n            \"parentAssetId\": null,\r\n            \"name\": \"{{asset_level1_name}}\",\r\n            \"deleted\": false,\r\n            \"assetTemplateId\": null\r\n            \r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{device-service}}/dev/assets/edit",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assets",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Asset (level 2)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Request has response\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property('data').to.be.a(\"array\");\r",
									"    const data_0_values_id =  json.data[0].values.id;\r",
									"    const data_0_values_name =  json.data[0].values.name;\r",
									"    pm.environment.set(\"asset_level2_id\", data_0_values_id);\r",
									"    pm.environment.set(\"asset_level2_name\", data_0_values_name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/{{asset_level1_id}}\",\r\n        \"type\": \"editing\",\r\n        \"key\": \"ID_TEMP_2\",\r\n        \"parentId\": \"{{asset_level1_id}}\",\r\n        \"assetTemplateId\": \"{{asset_level1_id}}\",\r\n        \"name\": \"{{asset_level2_name}}\",\r\n        \"deleted\": false,\r\n        \"value\": {\r\n            \"children\": [],\r\n            \"parentId\": \"{{asset_level1_id}}\",\r\n            \"parentAssetId\": \"{{asset_level1_id}}\",\r\n            \"name\": \"{{asset_level2_name}}\",\r\n            \"deleted\": false,\r\n            \"assetTemplateId\": null\r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{device-service}}/dev/assets/edit",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assets",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Asset (level 3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Request has response\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property('data').to.be.a(\"array\");\r",
									"    const data_0_values_id =  json.data[0].values.id;\r",
									"    const data_0_values_name =  json.data[0].values.name;\r",
									"    pm.environment.set(\"asset_level3_id\", data_0_values_id);\r",
									"    pm.environment.set(\"asset_level3_name\", data_0_values_name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/{{asset_level2_id}}\",\r\n        \"type\": \"editing\",\r\n        \"key\": \"ID_TEMP_3\",\r\n        \"parentId\": \"{{asset_level2_id}}\",\r\n        \"assetTemplateId\": \"{{asset_level2_id}}\",\r\n        \"name\": \"{{asset_level3_name}}\",\r\n        \"deleted\": false,\r\n        \"value\": {\r\n            \"children\": [],\r\n            \"parentId\": \"{{asset_level2_id}}\",\r\n            \"parentAssetId\": \"{{asset_level2_id}}\",\r\n            \"name\": \"{{asset_level3_name}}\",\r\n            \"deleted\": false,\r\n            \"assetTemplateId\": null\r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{device-service}}/dev/assets/edit",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assets",
								"edit"
							]
						}
					},
					"response": []
				}
			],
			"description": "The APIs are protected by OAuth2 authentication\n\nYou will need to get the access_token before calling the apis below"
		},
		{
			"name": "Tables",
			"item": [
				{
					"name": "Fail case AddTable",
					"item": [
						{
							"name": "Fail Add Table- Asset Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Asset Not Found has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Asset Not Found\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
											"    pm.expect(jsonData.detailCode).to.equal('MESSAGE.ASSETS.ASSET_ENTITY_NOT_FOUND');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{$guid}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{$guid}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- Name in Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Asset Not Found has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Asset Not Found\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('Name');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"ASN#%$@#$\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- more one primary key",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- greater one primary key has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- greater one primary key\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('IsPrimary');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_DUPLICATED');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_int2\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- Column Name is Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Column Name is Invalid has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Column Name is Invalid\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('Column.Name');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int@#$\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- Column Name is cluded system column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Column Name is included system column has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Column Name is included system column\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('Columns.Name[0]');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"    pm.expect(jsonData.fields[1].name).to.equal('Columns.Name[1]');\r",
											"    pm.expect(jsonData.fields[1].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"    pm.expect(jsonData.fields[2].name).to.equal('Columns.Name[2]');\r",
											"    pm.expect(jsonData.fields[2].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"created_by\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"created_utc\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"updated_utc\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- Datatype doesn't support",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Datatype doesn't support has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Datatype doesn't support\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('TypeCode');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"TEXTBOX\",\r\n            \"typename\": \"Textbox\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- Default value is invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Default value is invalid has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Default value is invalid\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('DefaultValue');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"$\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Asset Table- Timestamp is Invalid",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Add Asset Table- Timestamp is Invalid has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Add Asset Table- Timestamp is Invalid\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('DefaultValue');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$timestamp}}_4\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_double\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"typename\": \"double\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"ac\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Asset Table- Timestamp Over Flow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Add Asset Table- Timestamp Over Flow has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Add Asset Table- Timestamp Over Flow\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('DefaultValue');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_OUT_OF_RANGE');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$timestamp}}_4\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_double\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"typename\": \"double\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 253402300899999\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tags",
					"item": [
						{
							"name": "Add Asset Table - having tags",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Has table id\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('id');\r",
											"    const id = jsonData.id;\r",
											"    pm.environment.set(\"table_id_tag\", id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}_{{$randomAlphaNumeric}}\",\r\n    \"description\": \"table of asset {{asset_id}}\",\r\n    \"tags\": [  {\"key\": \"abc\",   \"value\": \"xyz\"}, {\"key\": \"123\",   \"value\": \"789\"}   ],\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Asset Table by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(`Match with table id ${pm.environment.get('table_id_tag')}`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get('table_id_tag'));\r",
											"    pm.expect(jsonData.tags.length).to.be.equal(2)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id_tag}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id_tag}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Asset Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 202\", function () {\r",
											"    pm.response.to.have.status(202);\r",
											"});\r",
											"pm.test(`Update table name compare`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('name');\r",
											"\r",
											"    const postRequest = JSON.parse(request.data);\r",
											"    pm.expect(jsonData).to.have.property('name', postRequest.name);\r",
											"\r",
											"    const name = jsonData.name;\r",
											"    pm.environment.set('table_name', name);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}_1_updated\",\r\n    \"description\": \"table of {{asset_id}}\",\r\n    \"tags\": [  {\"key\": \"abc\",   \"value\": \"xyz\"}, {\"key\": \"666\",   \"value\": \"789\"}, {\"key\": \"666\",   \"value\": \"789000\"}   ],\r\n    \"columns\": [\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"col_int_1\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"no\",\r\n            \"order\": 0\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id_tag}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id_tag}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Asset Table by Id 222",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(`Match with table id ${pm.environment.get('table_id_tag')}`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.be.equal(pm.environment.get('table_id_tag'));\r",
											"    pm.expect(jsonData.tags.length).to.be.equal(3)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id_tag}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id_tag}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Asset Tables",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(`Delete table id ${pm.environment.get('table_id_tag')}`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    \"{{table_id_tag}}\"\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Check exist table",
					"item": [
						{
							"name": "Add Asset Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Has table id\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('id');\r",
											"    const id = jsonData.id;\r",
											"    pm.environment.set(\"table_id\", id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"description\": \"table of asset {{asset_id}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Add Table- Name Duplicate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Add Table- Name Duplicate has status code 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Fail Add Table- Name Duplicate\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
											"    pm.expect(jsonData.fields[0].name).to.equal('Name');\r",
											"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_DUPLICATED');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Exist Asset Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/tbl/tablelist/{{table_id}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tablelist",
										"{{table_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Exist Asset Table- Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "HEAD",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/tbl/tablelist/{{$guid}}",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tablelist",
										"{{$guid}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Asset Table 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Has table id\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('id');\r",
											"    const id = jsonData.id;\r",
											"    pm.environment.set(\"table_id_2\", id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"{{$timestamp}}_2\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Exist Asset Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\":[\r\n        \"{{table_id}}\",\r\n        \"{{table_id_2}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tablelist/exist",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tablelist",
										"exist"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Exist Asset Table- Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\":[\r\n        \"{{$guid}}\",\r\n        \"{{table_id_2}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tablelist/exist",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tablelist",
										"exist"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Exist Asset Table- Not Found 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\":[\r\n        \"{{table_id}}\",\r\n        \"{{$guid}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tablelist/exist",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tablelist",
										"exist"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check Exist Asset Table- Not Found 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\":[\r\n        \"{{$guid}}\",\r\n        \"{{$guid}}\"\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tablelist/exist",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tablelist",
										"exist"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update table schema",
					"item": [
						{
							"name": "Senerio 1 (swapping col names)",
							"item": [
								{
									"name": "Add Table (all datatypes)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Add Table (all datatypes) success\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Add Table (all datatypes) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"\r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(15);\r",
													"\r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_REAL_id = getColId(\"col_REAL\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_BOOL\");\r",
													"    const schema_col_INT_id = getColId(\"col_INT\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DOUBLE\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DECIMAL\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TEXT\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TIMESTAMP\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_DATETIME\");\r",
													"    const schema_col_VA25_id = getColId(\"col_VA25\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA255\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA50\");\r",
													"\r",
													"    pm.environment.set(\"schema_col_BIGIN_id\", schema_col_BIGIN_id);\r",
													"    pm.environment.set(\"schema_col_REAL_id\", schema_col_REAL_id);\r",
													"    pm.environment.set(\"schema_col_BOOL_id\", schema_col_BOOL_id);\r",
													"    pm.environment.set(\"schema_col_INT_id\", schema_col_INT_id);\r",
													"    pm.environment.set(\"schema_col_DOUBLE_id\", schema_col_DOUBLE_id);\r",
													"    pm.environment.set(\"schema_col_DECIMAL_id\", schema_col_DECIMAL_id);\r",
													"    pm.environment.set(\"schema_col_TEXT_id\", schema_col_TEXT_id);\r",
													"    pm.environment.set(\"schema_col_TIMESTAMP_id\", schema_col_TIMESTAMP_id);\r",
													"    pm.environment.set(\"schema_col_DATETIME_id\", schema_col_DATETIME_id);\r",
													"    pm.environment.set(\"schema_col_VA25_id\", schema_col_VA25_id);\r",
													"    pm.environment.set(\"schema_col_VA255_id\", schema_col_VA255_id);\r",
													"    pm.environment.set(\"schema_col_VA50_id\", schema_col_VA50_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Upsert Table Data has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"col_BOOL\": true,\r\n        \"col_INT\": 1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_TEXT\": \"text\",\r\n        \"col_TIMESTAMP\": {{$timestamp}},\r\n        \"col_DATETIME\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_VA25\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"col_BOOL\": true,\r\n        \"col_INT\": 1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_TEXT\": \"text\",\r\n        \"col_TIMESTAMP\": {{$timestamp}},\r\n        \"col_DATETIME\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_VA25\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"col_BOOL\": true,\r\n        \"col_INT\": 1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_TEXT\": \"text\",\r\n        \"col_TIMESTAMP\": {{$timestamp}},\r\n        \"col_DATETIME\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_VA25\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (has records)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (has records) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (has records) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.above(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Table Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Delete Table Data success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Delete Table Data has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_BIGIN\": 1,\r\n        \"$action\": \"delete\"\r\n    },\r\n    {\r\n        \"col_BIGIN\": 2,\r\n        \"$action\": \"delete\"\r\n    },\r\n    {\r\n        \"col_BIGIN\": 3,\r\n        \"$action\": \"delete\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (no records)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (no records) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (no records) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.equals(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Table (swap all col names)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Update Table (swap all col names) success\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Update Table (swap all col names) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"\r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(15);\r",
													"    \r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_REAL\");\r",
													"    const schema_col_REAL_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_INT\");\r",
													"    const schema_col_INT_id = getColId(\"col_BOOL\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DECIMAL\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DOUBLE\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TIMESTAMP\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TEXT\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_VA25\");\r",
													"    const schema_col_VA25_id = getColId(\"col_DATETIME\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA50\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA255\");\r",
													"\r",
													"    pm.environment.set(\"schema_col_BIGIN_id\", schema_col_REAL_id);\r",
													"    pm.environment.set(\"schema_col_REAL_id\", schema_col_BIGIN_id);\r",
													"    pm.environment.set(\"schema_col_BOOL_id\", schema_col_INT_id);\r",
													"    pm.environment.set(\"schema_col_INT_id\", schema_col_BOOL_id);\r",
													"    pm.environment.set(\"schema_col_DOUBLE_id\", schema_col_DECIMAL_id);\r",
													"    pm.environment.set(\"schema_col_DECIMAL_id\", schema_col_DOUBLE_id);\r",
													"    pm.environment.set(\"schema_col_TEXT_id\", schema_col_TIMESTAMP_id);\r",
													"    pm.environment.set(\"schema_col_TIMESTAMP_id\", schema_col_TEXT_id);\r",
													"    pm.environment.set(\"schema_col_DATETIME_id\", schema_col_VA25_id);\r",
													"    pm.environment.set(\"schema_col_VA25_id\", schema_col_DATETIME_id);\r",
													"    pm.environment.set(\"schema_col_VA255_id\", schema_col_VA50_id);\r",
													"    pm.environment.set(\"schema_col_VA50_id\", schema_col_VA255_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}_{{$randomInt}}\",\r\n    \"description\": \"table of asset {{asset_id}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{schema_col_BIGIN_id}},\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_REAL_id}},\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_BOOL_id}},\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_INT_id}},\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DOUBLE_id}},\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DECIMAL_id}},\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TEXT_id}},\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TIMESTAMP_id}},\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DATETIME_id}},\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA25_id}},\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA255_id}},\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA50_id}},\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data (after swapping col names)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data (after swapping col names) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Upsert Table Data (after swapping col names) has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_BIGIN\": 1.1,\r\n        \"col_INT\": true,\r\n        \"col_BOOL\": 1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_TIMESTAMP\": \"text\",\r\n        \"col_TEXT\": {{$timestamp}},\r\n        \"col_VA25\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_DATETIME\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_BIGIN\": 1.1,\r\n        \"col_INT\": true,\r\n        \"col_BOOL\": 1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_TIMESTAMP\": \"text\",\r\n        \"col_TEXT\": {{$timestamp}},\r\n        \"col_VA25\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_DATETIME\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_BIGIN\": 1.1,\r\n        \"col_INT\": true,\r\n        \"col_BOOL\": 1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_TIMESTAMP\": \"text\",\r\n        \"col_TEXT\": {{$timestamp}},\r\n        \"col_VA25\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_DATETIME\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (after swapping col names)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (after swapping col names) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (after swapping col names) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.above(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Table Data (after swapping col names)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Delete Table Data (after swapping col names) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Delete Table Data (after swapping col names) has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1,\r\n        \"$action\": \"delete\"\r\n    },\r\n    {\r\n        \"col_REAL\": 2,\r\n        \"$action\": \"delete\"\r\n    },\r\n    {\r\n        \"col_REAL\": 3,\r\n        \"$action\": \"delete\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (after deleting)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (after deleting) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (after deleting) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.equals(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Senerio 2 (swapping col datatypes)",
							"item": [
								{
									"name": "Add Table (all datatypes)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Add Table (all datatypes) success\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Add Table (all datatypes) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"\r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(15);\r",
													"    \r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_REAL_id = getColId(\"col_REAL\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_BOOL\");\r",
													"    const schema_col_INT_id = getColId(\"col_INT\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DOUBLE\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DECIMAL\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TEXT\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TIMESTAMP\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_DATETIME\");\r",
													"    const schema_col_VA25_id = getColId(\"col_VA25\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA255\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA50\");\r",
													"\r",
													"    pm.environment.set(\"schema_col_BIGIN_id\", schema_col_BIGIN_id);\r",
													"    pm.environment.set(\"schema_col_REAL_id\", schema_col_REAL_id);\r",
													"    pm.environment.set(\"schema_col_BOOL_id\", schema_col_BOOL_id);\r",
													"    pm.environment.set(\"schema_col_INT_id\", schema_col_INT_id);\r",
													"    pm.environment.set(\"schema_col_DOUBLE_id\", schema_col_DOUBLE_id);\r",
													"    pm.environment.set(\"schema_col_DECIMAL_id\", schema_col_DECIMAL_id);\r",
													"    pm.environment.set(\"schema_col_TEXT_id\", schema_col_TEXT_id);\r",
													"    pm.environment.set(\"schema_col_TIMESTAMP_id\", schema_col_TIMESTAMP_id);\r",
													"    pm.environment.set(\"schema_col_DATETIME_id\", schema_col_DATETIME_id);\r",
													"    pm.environment.set(\"schema_col_VA25_id\", schema_col_VA25_id);\r",
													"    pm.environment.set(\"schema_col_VA255_id\", schema_col_VA255_id);\r",
													"    pm.environment.set(\"schema_col_VA50_id\", schema_col_VA50_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Table (swap all col datatypes)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Update Table (swap all col datatypes) success\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Update Table (swap all col datatypes) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"\r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(15);    \r",
													"    \r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}\",\r\n    \"description\": \"table of {{asset_id}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{schema_col_BIGIN_id}},\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_REAL_id}},\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_BOOL_id}},\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_INT_id}},\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DOUBLE_id}},\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DECIMAL_id}},\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TEXT_id}},\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TIMESTAMP_id}},\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DATETIME_id}},\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA25_id}},\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA255_id}},\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA50_id}},\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data (after swapping col datatypes)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data (after swapping col datatypes) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Upsert Table Data (after swapping col datatypes) has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1,\r\n        \"col_INT\": true,\r\n        \"col_BOOL\": 1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_TIMESTAMP\": \"text\",\r\n        \"col_TEXT\": {{$timestamp}},\r\n        \"col_VA25\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_DATETIME\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1,\r\n        \"col_INT\": true,\r\n        \"col_BOOL\": 1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_TIMESTAMP\": \"text\",\r\n        \"col_TEXT\": {{$timestamp}},\r\n        \"col_VA25\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_DATETIME\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1,\r\n        \"col_INT\": true,\r\n        \"col_BOOL\": 1,\r\n        \"col_DECIMAL\": 1.1,\r\n        \"col_DOUBLE\": 1.1,\r\n        \"col_TIMESTAMP\": \"text\",\r\n        \"col_TEXT\": {{$timestamp}},\r\n        \"col_VA25\": \"2023-01-01T12:12:12:0000\",\r\n        \"col_DATETIME\": \"text\",\r\n        \"col_VA50\": \"text\",\r\n        \"col_VA255\": \"text\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (after swapping col datatypes)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (after swapping col datatypes) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (after swapping col datatypes) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.above(0);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Senerio 3 (add default col values)",
							"item": [
								{
									"name": "Add Table (all datatypes & default values)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Add Table (all datatypes & default values) success\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Add Table (all datatypes & default values) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    \r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(15);\r",
													"\r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_REAL_id = getColId(\"col_REAL\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_BOOL\");\r",
													"    const schema_col_INT_id = getColId(\"col_INT\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DOUBLE\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DECIMAL\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TEXT\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TIMESTAMP\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_DATETIME\");\r",
													"    const schema_col_VA25_id = getColId(\"col_VA25\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA255\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA50\");\r",
													"\r",
													"    pm.environment.set(\"schema_col_BIGIN_id\", schema_col_BIGIN_id);\r",
													"    pm.environment.set(\"schema_col_REAL_id\", schema_col_REAL_id);\r",
													"    pm.environment.set(\"schema_col_BOOL_id\", schema_col_BOOL_id);\r",
													"    pm.environment.set(\"schema_col_INT_id\", schema_col_INT_id);\r",
													"    pm.environment.set(\"schema_col_DOUBLE_id\", schema_col_DOUBLE_id);\r",
													"    pm.environment.set(\"schema_col_DECIMAL_id\", schema_col_DECIMAL_id);\r",
													"    pm.environment.set(\"schema_col_TEXT_id\", schema_col_TEXT_id);\r",
													"    pm.environment.set(\"schema_col_TIMESTAMP_id\", schema_col_TIMESTAMP_id);\r",
													"    pm.environment.set(\"schema_col_DATETIME_id\", schema_col_DATETIME_id);\r",
													"    pm.environment.set(\"schema_col_VA25_id\", schema_col_VA25_id);\r",
													"    pm.environment.set(\"schema_col_VA255_id\", schema_col_VA255_id);\r",
													"    pm.environment.set(\"schema_col_VA50_id\", schema_col_VA50_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 111,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": true,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 222,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 333.3,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 444.4,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_TEXT\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": {{$timestamp}},\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"2023-01-01T12:12:12:0000\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_VA25\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_VA255\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_VA50\",\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Upsert Table Data has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.2,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.3,\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (has records)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (has records) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (has records) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.above(0);\r",
													"\r",
													"    const firstRecord = jsonData[0];\r",
													"\r",
													"    pm.expect(firstRecord).to.have.property('col_BIGIN');\r",
													"    pm.expect(firstRecord).to.have.property('col_REAL');\r",
													"    pm.expect(firstRecord).to.have.property('col_BOOL');\r",
													"    pm.expect(firstRecord).to.have.property('col_INT');\r",
													"    pm.expect(firstRecord).to.have.property('col_DOUBLE');\r",
													"    pm.expect(firstRecord).to.have.property('col_DECIMAL');\r",
													"    pm.expect(firstRecord).to.have.property('col_TEXT');\r",
													"    pm.expect(firstRecord).to.have.property('col_TIMESTAMP');\r",
													"    pm.expect(firstRecord).to.have.property('col_DATETIME');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA25');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA255');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA50');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Table (update col default fail)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Update Table (update col default fail)\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(\"Update Table (update col default fail) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('fields');\r",
													"    pm.expect(jsonData.fields.length).to.be.equals(1);\r",
													"    const firstError = jsonData.fields[0];\r",
													"    pm.expect(firstError.name).to.be.equals('DefaultValue');\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{schema_table_name}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{schema_col_BIGIN_id}},\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_REAL_id}},\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_BOOL_id}},\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_INT_id}},\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DOUBLE_id}},\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DECIMAL_id}},\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TEXT_id}},\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TIMESTAMP_id}},\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DATETIME_id}},\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA25_id}},\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA255_id}},\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA50_id}},\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"name\": \"col_NEW\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Table (update col default)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Update Table (update col default) success\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Update Table (update col default) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    \r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_REAL_id = getColId(\"col_REAL\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_BOOL\");\r",
													"    const schema_col_INT_id = getColId(\"col_INT\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DOUBLE\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DECIMAL\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TEXT\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TIMESTAMP\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_DATETIME\");\r",
													"    const schema_col_VA25_id = getColId(\"col_VA25\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA255\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA50\");\r",
													"\r",
													"    pm.environment.set(\"schema_col_BIGIN_id\", schema_col_BIGIN_id);\r",
													"    pm.environment.set(\"schema_col_REAL_id\", schema_col_REAL_id);\r",
													"    pm.environment.set(\"schema_col_BOOL_id\", schema_col_BOOL_id);\r",
													"    pm.environment.set(\"schema_col_INT_id\", schema_col_INT_id);\r",
													"    pm.environment.set(\"schema_col_DOUBLE_id\", schema_col_DOUBLE_id);\r",
													"    pm.environment.set(\"schema_col_DECIMAL_id\", schema_col_DECIMAL_id);\r",
													"    pm.environment.set(\"schema_col_TEXT_id\", schema_col_TEXT_id);\r",
													"    pm.environment.set(\"schema_col_TIMESTAMP_id\", schema_col_TIMESTAMP_id);\r",
													"    pm.environment.set(\"schema_col_DATETIME_id\", schema_col_DATETIME_id);\r",
													"    pm.environment.set(\"schema_col_VA25_id\", schema_col_VA25_id);\r",
													"    pm.environment.set(\"schema_col_VA255_id\", schema_col_VA255_id);\r",
													"    pm.environment.set(\"schema_col_VA50_id\", schema_col_VA50_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{schema_table_name}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{schema_col_BIGIN_id}},\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_REAL_id}},\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_BOOL_id}},\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_INT_id}},\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DOUBLE_id}},\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DECIMAL_id}},\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TEXT_id}},\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TIMESTAMP_id}},\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DATETIME_id}},\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA25_id}},\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA255_id}},\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA50_id}},\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"name\": \"col_NEW\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"new\",\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data (fail no required col)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data (fail no required col) fail\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"pm.test(`Upsert Table Data (fail no required col) has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(false);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.2,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.3,\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Table (update col null & delete col)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Update Table (update col null & delete col) success\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Update Table (update col null & delete col) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"\r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(14);\r",
													"\r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{schema_table_name}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{schema_col_BIGIN_id}},\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_REAL_id}},\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_BOOL_id}},\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_INT_id}},\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DOUBLE_id}},\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DECIMAL_id}},\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TEXT_id}},\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TIMESTAMP_id}},\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DATETIME_id}},\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA25_id}},\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA255_id}},\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"delete\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA50_id}},\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": null,\r\n            \"action\": \"delete\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data (success no required col)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data (success no required col) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Upsert Table Data (success no required col) has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.2,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.3,\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (has records)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (has records) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (has records) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.above(3);\r",
													"\r",
													"    const firstRecord = jsonData[0];\r",
													"\r",
													"    pm.expect(firstRecord).to.have.property('col_BIGIN');\r",
													"    pm.expect(firstRecord).to.have.property('col_REAL');\r",
													"    pm.expect(firstRecord).to.have.property('col_BOOL');\r",
													"    pm.expect(firstRecord).to.have.property('col_INT');\r",
													"    pm.expect(firstRecord).to.have.property('col_DOUBLE');\r",
													"    pm.expect(firstRecord).to.have.property('col_DECIMAL');\r",
													"    pm.expect(firstRecord).to.have.property('col_TEXT');\r",
													"    pm.expect(firstRecord).to.have.property('col_TIMESTAMP');\r",
													"    pm.expect(firstRecord).to.have.property('col_DATETIME');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA25');\r",
													"    pm.expect(firstRecord).to.not.have.property('col_VA50');\r",
													"    pm.expect(firstRecord).to.not.have.property('col_VA255');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Senerio 4 (update schema keep current column id)",
							"item": [
								{
									"name": "Add Table (all datatypes & default values)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Add Table (all datatypes & default values) success\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"pm.test(\"Add Table (all datatypes & default values) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    \r",
													"    pm.expect(jsonData).to.have.property('columns');\r",
													"    pm.expect(jsonData.columns.length).to.be.equals(15);\r",
													"\r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_REAL_id = getColId(\"col_REAL\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_BOOL\");\r",
													"    const schema_col_INT_id = getColId(\"col_INT\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DOUBLE\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DECIMAL\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TEXT\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TIMESTAMP\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_DATETIME\");\r",
													"    const schema_col_VA25_id = getColId(\"col_VA25\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA255\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA50\");\r",
													"\r",
													"    pm.environment.set(\"schema_col_BIGIN_id\", schema_col_BIGIN_id);\r",
													"    pm.environment.set(\"schema_col_REAL_id\", schema_col_REAL_id);\r",
													"    pm.environment.set(\"schema_col_BOOL_id\", schema_col_BOOL_id);\r",
													"    pm.environment.set(\"schema_col_INT_id\", schema_col_INT_id);\r",
													"    pm.environment.set(\"schema_col_DOUBLE_id\", schema_col_DOUBLE_id);\r",
													"    pm.environment.set(\"schema_col_DECIMAL_id\", schema_col_DECIMAL_id);\r",
													"    pm.environment.set(\"schema_col_TEXT_id\", schema_col_TEXT_id);\r",
													"    pm.environment.set(\"schema_col_TIMESTAMP_id\", schema_col_TIMESTAMP_id);\r",
													"    pm.environment.set(\"schema_col_DATETIME_id\", schema_col_DATETIME_id);\r",
													"    pm.environment.set(\"schema_col_VA25_id\", schema_col_VA25_id);\r",
													"    pm.environment.set(\"schema_col_VA255_id\", schema_col_VA255_id);\r",
													"    pm.environment.set(\"schema_col_VA50_id\", schema_col_VA50_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_REAL\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 111,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_BOOL\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": true,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_INT\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 222,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DOUBLE\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 333.3,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DECIMAL\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": 444.4,\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TEXT\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_TEXT\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_TIMESTAMP\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": {{$timestamp}},\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_DATETIME\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"2023-01-01T12:12:12:0000\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA25\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_VA25\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA255\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_VA255\",\r\n            \"action\": \"add\"\r\n        },\r\n        {\r\n            \"name\": \"col_VA50\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"text_VA50\",\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables"
											]
										}
									},
									"response": []
								},
								{
									"name": "Upsert Table Data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Upsert Table Data success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(`Upsert Table Data has response payload`, function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('isSuccess');\r",
													"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\r\n        \"col_REAL\": 1.1,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.2,\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_REAL\": 1.3,\r\n        \"$action\": \"add\"\r\n    }\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/insert",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"insert"
											]
										}
									},
									"response": []
								},
								{
									"name": "Query Table Data (has records)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Query Table Data (has records) success\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"pm.test(\"Query Table Data (has records) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    console.log(jsonData);\r",
													"    pm.expect(jsonData.length).to.be.above(0);\r",
													"\r",
													"    const firstRecord = jsonData[0];\r",
													"\r",
													"    pm.expect(firstRecord).to.have.property('col_BIGIN');\r",
													"    pm.expect(firstRecord).to.have.property('col_REAL');\r",
													"    pm.expect(firstRecord).to.have.property('col_BOOL');\r",
													"    pm.expect(firstRecord).to.have.property('col_INT');\r",
													"    pm.expect(firstRecord).to.have.property('col_DOUBLE');\r",
													"    pm.expect(firstRecord).to.have.property('col_DECIMAL');\r",
													"    pm.expect(firstRecord).to.have.property('col_TEXT');\r",
													"    pm.expect(firstRecord).to.have.property('col_TIMESTAMP');\r",
													"    pm.expect(firstRecord).to.have.property('col_DATETIME');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA25');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA255');\r",
													"    pm.expect(firstRecord).to.have.property('col_VA50');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}/query",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}",
												"query"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Table (keep current column id)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Update Table (update col default) success\", function () {\r",
													"    pm.response.to.have.status(202);\r",
													"});\r",
													"pm.test(\"Update Table (update col default) has response payload\", function () {\r",
													"    const jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property('id');\r",
													"    \r",
													"    const id = jsonData.id;\r",
													"    const name = jsonData.name;\r",
													"    \r",
													"    pm.environment.set(\"schema_table_id\", id);\r",
													"    pm.environment.set(\"schema_table_name\", name);\r",
													"\r",
													"    const getColId = (colName) => jsonData.columns.find(col => col.name === colName).id;\r",
													"    \r",
													"    const schema_col_BIGIN_id = getColId(\"col_BIGIN\");\r",
													"    const schema_col_REAL_id = getColId(\"col_REAL1\");\r",
													"    const schema_col_BOOL_id = getColId(\"col_BOOL1\");\r",
													"    const schema_col_INT_id = getColId(\"col_INT1\");\r",
													"    const schema_col_DOUBLE_id = getColId(\"col_DOUBLE1\");\r",
													"    const schema_col_DECIMAL_id = getColId(\"col_DECIMAL1\");\r",
													"    const schema_col_TEXT_id = getColId(\"col_TEXT1\");\r",
													"    const schema_col_TIMESTAMP_id = getColId(\"col_TIMESTAMP1\");\r",
													"    const schema_col_DATETIME_id = getColId(\"col_DATETIME1\");\r",
													"    const schema_col_VA25_id = getColId(\"col_VA251\");\r",
													"    const schema_col_VA255_id = getColId(\"col_VA2551\");\r",
													"    const schema_col_VA50_id = getColId(\"col_VA501\");\r",
													"\r",
													"    const current_schema_col_BIGIN_id = pm.environment.get(\"schema_col_BIGIN_id\");\r",
													"    const current_schema_col_REAL_id = pm.environment.get(\"schema_col_REAL_id\");\r",
													"    const current_schema_col_BOOL_id = pm.environment.get(\"schema_col_BOOL_id\");\r",
													"    const current_schema_col_INT_id = pm.environment.get(\"schema_col_INT_id\");\r",
													"    const current_schema_col_DOUBLE_id = pm.environment.get(\"schema_col_DOUBLE_id\");\r",
													"    const current_schema_col_DECIMAL_id = pm.environment.get(\"schema_col_DECIMAL_id\");\r",
													"    const current_schema_col_TEXT_id = pm.environment.get(\"schema_col_TEXT_id\");\r",
													"    const current_schema_col_TIMESTAMP_id = pm.environment.get(\"schema_col_TIMESTAMP_id\");\r",
													"    const current_schema_col_DATETIME_id = pm.environment.get(\"schema_col_DATETIME_id\");\r",
													"    const current_schema_col_VA25_id = pm.environment.get(\"schema_col_VA25_id\");\r",
													"    const current_schema_col_VA255_id = pm.environment.get(\"schema_col_VA255_id\");\r",
													"    const current_schema_col_VA50_id = pm.environment.get(\"schema_col_VA50_id\");\r",
													"\r",
													"    pm.expect(schema_col_BIGIN_id).to.equal(current_schema_col_BIGIN_id);\r",
													"    pm.expect(schema_col_REAL_id).to.equal(current_schema_col_REAL_id);\r",
													"    pm.expect(schema_col_BOOL_id).to.equal(current_schema_col_BOOL_id);\r",
													"    pm.expect(schema_col_INT_id).to.equal(current_schema_col_INT_id);\r",
													"    pm.expect(schema_col_DOUBLE_id).to.equal(current_schema_col_DOUBLE_id);\r",
													"    pm.expect(schema_col_DECIMAL_id).to.equal(current_schema_col_DECIMAL_id);\r",
													"    pm.expect(schema_col_TEXT_id).to.equal(current_schema_col_TEXT_id);\r",
													"    pm.expect(schema_col_TIMESTAMP_id).to.equal(current_schema_col_TIMESTAMP_id);\r",
													"    pm.expect(schema_col_DATETIME_id).to.equal(current_schema_col_DATETIME_id);\r",
													"    pm.expect(schema_col_VA25_id).to.equal(current_schema_col_VA25_id);\r",
													"    pm.expect(schema_col_VA255_id).to.equal(current_schema_col_VA255_id);\r",
													"    pm.expect(schema_col_VA50_id).to.equal(current_schema_col_VA50_id);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{access_token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{schema_table_name}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{schema_col_BIGIN_id}},\r\n            \"name\": \"col_BIGIN\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"no\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_REAL_id}},\r\n            \"name\": \"col_REAL1\",\r\n            \"typecode\": \"REAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_BOOL_id}},\r\n            \"name\": \"col_BOOL1\",\r\n            \"typecode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_INT_id}},\r\n            \"name\": \"col_INT1\",\r\n            \"typecode\": \"INT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DOUBLE_id}},\r\n            \"name\": \"col_DOUBLE1\",\r\n            \"typecode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DECIMAL_id}},\r\n            \"name\": \"col_DECIMAL1\",\r\n            \"typecode\": \"DECIMAL\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TEXT_id}},\r\n            \"name\": \"col_TEXT1\",\r\n            \"typecode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_TIMESTAMP_id}},\r\n            \"name\": \"col_TIMESTAMP1\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_DATETIME_id}},\r\n            \"name\": \"col_DATETIME1\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA25_id}},\r\n            \"name\": \"col_VA251\",\r\n            \"typecode\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA255_id}},\r\n            \"name\": \"col_VA2551\",\r\n            \"typecode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"id\": {{schema_col_VA50_id}},\r\n            \"name\": \"col_VA501\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": null,\r\n            \"action\": \"update\"\r\n        },\r\n        {\r\n            \"name\": \"col_NEW1\",\r\n            \"typecode\": \"VA50\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"new\",\r\n            \"action\": \"add\"\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{schema_table_id}}",
											"host": [
												"{{host}}"
											],
											"path": [
												"tbl",
												"tables",
												"asset",
												"{{asset_id}}",
												"tables",
												"{{schema_table_id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Upsert table data",
					"item": [
						{
							"name": "Upsert Table Data- Insert Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Upsert Table Data- Insert Case has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(`Upsert Table Data- Insert Case`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"col_int\": \"1\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"2956909964\",\r\n        \"col_varchar25\": \"this is sample text\",\r\n        \"col_varchar50\": \"this is sample text\",\r\n        \"col_varchar255\": \"this is sample text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_int\": \"2\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is sample text\",\r\n        \"col_varchar50\": \"this is sample text\",\r\n        \"col_varchar255\": \"this is sample text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_int\": \"3\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text3\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is sample text3\",\r\n        \"col_varchar50\": \"this is sample text3\",\r\n        \"col_varchar255\": \"this is sample text3\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/insert",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id}}",
										"insert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upsert Table Data- Insert Case Failed - Primary Key Violation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Upsert Table Data- Insert Case has failed\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(`Upsert Table Data- Insert Case - Failed - Primary Violation`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.be.equal(false);    \r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.DATABASE.UNIQUE_VIOLATION');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"col_int\": \"3\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"2956909964\",\r\n        \"col_varchar25\": \"this is sample text\",\r\n        \"col_varchar50\": \"this is sample text\",\r\n        \"col_varchar255\": \"this is sample text\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/insert",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id}}",
										"insert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upsert Table Data- Update Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Upsert Table Data- Update Case has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(`Upsert Table Data- Update Case`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"col_int\": \"1\",\r\n        \"col_bigint\": \"654\",\r\n        \"col_bool\": \"false\",\r\n        \"col_real\": \"654.654\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"2956909964\",\r\n        \"col_varchar25\": \"this is update\",\r\n        \"col_varchar50\": \"this is sample text update\",\r\n        \"col_varchar255\": \"this is text update\",\r\n        \"$action\": \"update\"\r\n    },\r\n    {\r\n        \"col_int\": \"2\",\r\n        \"col_bigint\": \"654\",\r\n        \"col_bool\": \"false\",\r\n        \"col_real\": \"654.654\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is update\",\r\n        \"col_varchar50\": \"this is sample text update\",\r\n        \"col_varchar255\": \"this is sample text update\",\r\n        \"$action\": \"update\"\r\n    },\r\n    {\r\n        \"col_int\": \"3\",\r\n        \"col_bigint\": \"654\",\r\n        \"col_bool\": \"false\",\r\n        \"col_real\": \"654.654\",\r\n        \"col_text\": \"this is sample text3 update\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is update\",\r\n        \"col_varchar50\": \"this is sample text3 update\",\r\n        \"col_varchar255\": \"this is sample text3 update\",\r\n        \"$action\": \"update\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/insert",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id}}",
										"insert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upsert Table Data- Update And Delete case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Upsert Table Data- Update And Delete case has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(`Upsert Table Data- Update And Delete case`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"col_int\": \"1\",\r\n        \"col_bigint\": \"4561\",\r\n        \"col_bool\": \"false\",\r\n        \"col_real\": \"456.4561\",\r\n        \"col_text\": \"this is sample text 2\",\r\n        \"col_timestamp\": \"2956909964\",\r\n        \"col_varchar25\": \"this is sample text2\",\r\n        \"col_varchar50\": \"this is sample text2\",\r\n        \"col_varchar255\": \"this is sample text2\",\r\n        \"$action\": \"update\"\r\n    },\r\n    {\r\n        \"col_int\": \"2\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is sample text\",\r\n        \"col_varchar50\": \"this is sample text\",\r\n        \"col_varchar255\": \"this is sample text\",\r\n        \"$action\": \"delete\"\r\n    },\r\n    {\r\n        \"col_int\": \"3\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text3\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is sample text3\",\r\n        \"col_varchar50\": \"this is sample text3\",\r\n        \"col_varchar255\": \"this is sample text3\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/insert",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id}}",
										"insert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Asset Table Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Query Asset Table Data success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Query Asset Table Data has response payload\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData);\r",
											"    pm.expect(jsonData.length).to.be.above(0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id}}",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Upsert Table Data- Table Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Fail Upsert Table Data- Table Not Found has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(`Fail Upsert Table Data- Table Not Found}`, function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"col_int\": \"1\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"2956909964\",\r\n        \"col_varchar25\": \"this is sample text\",\r\n        \"col_varchar50\": \"this is sample text\",\r\n        \"col_varchar255\": \"this is sample text\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"col_int\": \"2\",\r\n        \"col_bigint\": \"456\",\r\n        \"col_bool\": \"true\",\r\n        \"col_real\": \"456.456\",\r\n        \"col_text\": \"this is sample text\",\r\n        \"col_timestamp\": \"3956909964\",\r\n        \"col_varchar25\": \"this is sample text\",\r\n        \"col_varchar50\": \"this is sample text\",\r\n        \"col_varchar255\": \"this is sample text\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{$guid}}/insert",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{$guid}}",
										"insert"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Concurency",
					"item": [
						{
							"name": "Get Table Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"The request has status code 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"column_a\": \"1111\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row1c\"\r\n    },\r\n    {\r\n        \"column_a\": \"2222\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row2c\"\r\n    },\r\n    {\r\n        \"column_a\": \"3333\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row3c\"\r\n    },\r\n    {\r\n        \"column_a\": \"4444\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row3c\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{table_id}}",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fail Get Table Data- Table Not Found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"The Fail Get Table Data- Table Not Found has status code 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											"pm.test(\"Fail Get Table Data- Table Not Found\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.has.property('isSuccess');\r",
											"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
											"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
											"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
											"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"column_a\": \"1111\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row1c\"\r\n    },\r\n    {\r\n        \"column_a\": \"2222\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row2c\"\r\n    },\r\n    {\r\n        \"column_a\": \"3333\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row3c\"\r\n    },\r\n    {\r\n        \"column_a\": \"4444\",\r\n        \"column_b\": \"2020/1/1\",\r\n        \"column_c\": \"Text data row3c\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{$guid}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables",
										"{{$guid}}",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Take Lock Table Error Not Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Take Lock Table return status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Take Lock Table Error Not Lock\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json).to.have.property(\"isSuccess\").to.equal(false);\r",
											"    pm.expect(json).to.have.property(\"errorCode\").to.equal(\"ERROR.ENTITY.LOCK.NOT_LOCKED\");\r",
											"    pm.expect(json).to.have.property(\"detailCode\").to.equal(\"ERROR.ENTITY.LOCK.NOT_LOCKED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"timeout\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm Taken Lock Table Error Not Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Confirm Taken Lock Table return status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Confirm Taken Lock Table Error Not Lock\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.isSuccess).to.eql(false);\r",
											"    // pm.expect(json.message).to.eql(\"ENTITY_LOCK.NOT_LOCKED\");\r",
											"    // pm.expect(json.errorCode).to.eql(\"ERROR.ENTITY.LOCK.NOT_LOCKED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requestLockUserUpn\": \"{{lock_user_upn_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release/accept",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release",
										"accept"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Taken Lock Table Error Not Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Reject Taken Lock Table return status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Reject Taken Lock Table Error Not Lock\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.isSuccess).to.eql(false);\r",
											"    // pm.expect(json.message).to.eql(\"ENTITY_LOCK.NOT_LOCKED\");\r",
											"    // pm.expect(json.errorCode).to.eql(\"ERROR.ENTITY.LOCK.NOT_LOCKED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rejectedUserUpn\": \"{{current_upn}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release/reject",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unlock Table Error Not Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Unlock Table return status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Unlock Table Error Not Lock\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json).to.have.property(\"isSuccess\").to.equal(false);\r",
											"    pm.expect(json).to.have.property(\"errorCode\").to.equal(\"ERROR.ENTITY.LOCK.NOT_LOCKED\");\r",
											"    pm.expect(json).to.have.property(\"detailCode\").to.equal(\"ERROR.ENTITY.LOCK.NOT_LOCKED\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Lock Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Lock Table\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.targetId).to.eql(pm.environment.get(\"table_id\"));\r",
											"    const currentUserUpn = json.currentUserUpn;\r",
											"    pm.environment.set(\"lock_user_upn_1\", currentUserUpn);\r",
											"    console.log(`set lock_user_upn_1 ${pm.environment.get(\"lock_user_upn_1\")}`)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Lock Table Error Already Lock",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Lock Table Error Already Lock\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.targetId).to.eql(pm.environment.get(\"table_id\"));\r",
											"    const currentUserUpn = json.currentUserUpn;\r",
											"    pm.environment.set(\"lock_user_upn_1\", currentUserUpn);\r",
											"    console.log(`set lock_user_upn_1 ${pm.environment.get(\"lock_user_upn_1\")}`)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Take Lock Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Take Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Take Lock Table\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.targetId).to.eql(pm.environment.get(\"table_id\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"timeout\": 20\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release"
									]
								}
							},
							"response": []
						},
						{
							"name": "Take Lock Table Error Taken By Other",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Take Lock Table return status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Take Lock Table Error Taken By Other\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json).to.have.property(\"isSuccess\").to.equal(false);\r",
											"    pm.expect(json).to.have.property(\"errorCode\").to.equal(\"ERROR.ENTITY.LOCK.REQUESTED_IN_PROCESS\");\r",
											"    pm.expect(json).to.have.property(\"detailCode\").to.equal(\"ERROR.ENTITY.LOCK.REQUESTED_IN_PROCESS\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"timeout\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release"
									]
								}
							},
							"response": []
						},
						{
							"name": "Reject Taken Lock Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Reject Taken Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Reject Taken Lock Table\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.isSuccess).to.eql(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"rejectedUserUpn\": \"{{lock_user_upn_1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release/reject",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release",
										"reject"
									]
								}
							},
							"response": []
						},
						{
							"name": "Take Lock Table 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Take Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Take Lock Table\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.targetId).to.eql(pm.environment.get(\"table_id\"));\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"timeout\": 10\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release"
									]
								}
							},
							"response": []
						},
						{
							"name": "Confirm Taken Lock Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Confirm Taken Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"// pm.test(\"Confirm Taken Lock Table\", function () {\r",
											"//     const json = pm.response.json();\r",
											"//     pm.expect(json.assetId).to.eql(pm.environment.get(\"asset_id\"));\r",
											"//     pm.expect(json.tableId).to.eql(pm.environment.get(\"table_id\"));\r",
											"//     pm.expect(json.requestLockUserUpn).to.eql(pm.environment.get(\"lock_user_upn_1\"));\r",
											"// });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock/request/release/accept",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock",
										"request",
										"release",
										"accept"
									]
								}
							},
							"response": []
						},
						{
							"name": "Lock Table 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Lock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Lock Table\", function () {\r",
											"    const json = pm.response.json();\r",
											"    pm.expect(json.targetId).to.eql(pm.environment.get(\"table_id\"));\r",
											"    const currentUserUpn = json.currentUserUpn;\r",
											"    pm.environment.set(\"lock_user_upn_1\", currentUserUpn);\r",
											"    console.log(`set lock_user_upn_1 ${pm.environment.get(\"lock_user_upn_1\")}`)\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unlock Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Unlock Table return status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock",
									"host": [
										"{{entity-service}}"
									],
									"path": [
										"ent",
										"locks",
										"{{table_id}}",
										"lock"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Table API",
					"item": [
						{
							"name": "Add Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Add Table success\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"pm.test(\"Add Table has response payload\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property('id');\r",
											"    const id = jsonData.id;\r",
											"    pm.environment.set(\"api_table_id\", id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"table_{{$randomFirstName}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"id\",\r\n            \"typeCode\": \"INT\",\r\n            \"isPrimary\": 1,\r\n            \"order\": 1,\r\n            \"allowNull\": false,\r\n            \"defaultValue\": null\r\n        },\r\n        {\r\n            \"name\": \"name\",\r\n            \"typeCode\": \"VA255\",\r\n            \"isPrimary\": 0,\r\n            \"order\": 0,\r\n            \"allowNull\": false,\r\n            \"defaultValue\": null\r\n        },\r\n        {\r\n            \"name\": \"value\",\r\n            \"typeCode\": \"DOUBLE\",\r\n            \"isPrimary\": 0,\r\n            \"order\": 0,\r\n            \"allowNull\": false,\r\n            \"defaultValue\": null\r\n        },\r\n        {\r\n            \"name\": \"note\",\r\n            \"typeCode\": \"TEXT\",\r\n            \"isPrimary\": 0,\r\n            \"order\": 0,\r\n            \"allowNull\": false,\r\n            \"defaultValue\": \"this is default value\"\r\n        },\r\n        {\r\n            \"name\": \"status\",\r\n            \"typeCode\": \"BOOL\",\r\n            \"isPrimary\": 0,\r\n            \"order\": 0,\r\n            \"allowNull\": false,\r\n            \"defaultValue\": \"false\"\r\n        },\r\n        {\r\n            \"name\": \"ts\",\r\n            \"typeCode\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"order\": 0,\r\n            \"allowNull\": false,\r\n            \"defaultValue\": null\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"asset",
										"{{asset_id}}",
										"tables"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upsert Data in Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Upsert Data in Asset Table success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\r\n    {\r\n        \"id\": 1, // Perform add\r\n        \"name\": \"record 1\",\r\n        \"value\": 1000,\r\n        \"status\": true,\r\n        \"ts\": 10000001,\r\n        \"created_utc\": \"2022-12-01T12:12:12:0000\"\r\n    },\r\n    {\r\n        \"id\": 2, // Perform add\r\n        \"name\": \"record 2\",\r\n        \"value\": 2000,\r\n        \"note\": \"this is note\",\r\n        \"status\": true,\r\n        \"ts\": 10000002,\r\n        \"created_utc\": \"2022-12-02T12:12:12:0000\"\r\n    },\r\n    {\r\n        \"id\": 3, // Perform add\r\n        \"name\": \"record 3\",\r\n        \"value\": 3000,\r\n        \"status\": true,\r\n        \"ts\": 10000003,\r\n        \"created_utc\": \"2022-12-03T12:12:12:0000\"\r\n    },\r\n    {\r\n        \"id\": 3, // Perform update\r\n        \"name\": \"record 3.1\",\r\n        \"value\": 3000.1,\r\n        \"note\": \"this is note\",\r\n        \"status\": true,\r\n        \"ts\": 10000003,\r\n        \"created_utc\": \"2022-12-04T12:12:12:0000\"\r\n    },\r\n    {\r\n        // Perform add with new Id\r\n        \"name\": \"record 4\",\r\n        \"value\": 4000,\r\n        \"status\": true,\r\n        \"ts\": 10000004,\r\n        \"created_utc\": \"2022-12-05T12:12:12:0000\"\r\n    }\r\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/{{api_table_id}}/upsert",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"{{api_table_id}}",
										"upsert"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Data from Table (all)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Query Data from Table (all) success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Query Data from Table (all) has response payload\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData);\r",
											"    pm.expect(jsonData.length).to.be.equals(4);\r",
											"    const firstRecord = jsonData[0];\r",
											"    pm.expect(firstRecord.name).to.be.equals(\"record 1\");\r",
											"    pm.expect(firstRecord.note).to.be.equals(\"this is default value\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"pageIndex\": 0,\r\n    \"pageSize\": {{$randomInt}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/{{api_table_id}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"{{api_table_id}}",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Data from Table (with sorting)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Query Data from Table (with sorting) success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Query Data from Table (with sorting) has response payload\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData);\r",
											"    pm.expect(jsonData.length).to.be.above(0);\r",
											"    const firstRecord = jsonData[0];\r",
											"    pm.expect(firstRecord.name).to.be.equals(\"record 4\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"pageIndex\": 0,\r\n    \"pageSize\": {{$randomInt}},\r\n    \"sorts\": \"created_utc=desc\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/{{api_table_id}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"{{api_table_id}}",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Data from Table (with filter)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Query Data from Table (with filter) success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Query Data from Table (with filter) has response payload\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData);\r",
											"    pm.expect(jsonData.length).to.be.equals(1);\r",
											"    const firstRecord = jsonData[0];\r",
											"    pm.expect(firstRecord.name).to.be.equals(\"record 3.1\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"pageIndex\": 0,\r\n    \"pageSize\": {{$randomInt}},\r\n    \"filter\": {\r\n        \"and\": [\r\n            {\r\n                \"queryKey\": \"created_utc\",\r\n                \"queryType\": \"date\",\r\n                \"operation\": \"gte\",\r\n                \"queryValue\": \"2022-12-03T12:12:12:0000\"\r\n            },\r\n            {\r\n                \"queryKey\": \"name\",\r\n                \"queryType\": \"text\",\r\n                \"operation\": \"contains\",\r\n                \"queryValue\": \"3\"\r\n            }\r\n        ]\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/{{api_table_id}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"{{api_table_id}}",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Data from Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Delete Data from Table success\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ids\": [1,2,3]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/{{api_table_id}}/delete",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"{{api_table_id}}",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Query Data from Table (check data)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Query Data from Table (check data) sucess\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Query Data from Table (check data) has response payload\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    console.log(jsonData);\r",
											"    pm.expect(jsonData.length).to.be.equals(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"pageIndex\": 0,\r\n    \"pageSize\": {{$randomInt}},\r\n    \"sorts\": \"name=asc,created_utc=desc\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}/tbl/tables/{{api_table_id}}/query",
									"host": [
										"{{host}}"
									],
									"path": [
										"tbl",
										"tables",
										"{{api_table_id}}",
										"query"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get All Tables of Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has data\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.columns.length).to.be.above(0);\r",
									"    const columns_0_id = jsonData.columns[0].id;\r",
									"    pm.environment.set('table_column_int_id',columns_0_id);\r",
									"    const columns_1_id = jsonData.columns[1].id;\r",
									"    pm.environment.set('table_column_big_int_id',columns_1_id);\r",
									"    const columns_2_id = jsonData.columns[2].id;\r",
									"    pm.environment.set('table_column_bool_id',columns_2_id);\r",
									"    const columns_3_id = jsonData.columns[3].id;\r",
									"    pm.environment.set('table_column_real_id',columns_3_id);\r",
									"    const columns_4_id = jsonData.columns[4].id;\r",
									"    pm.environment.set('table_column_text_id',columns_4_id);\r",
									"    const columns_5_id = jsonData.columns[5].id;\r",
									"    pm.environment.set('table_column_timestamp_id',columns_5_id);\r",
									"    const columns_6_id = jsonData.columns[6].id;\r",
									"    pm.environment.set('table_column_varchar_25_id',columns_6_id);\r",
									"    const columns_7_id = jsonData.columns[7].id;\r",
									"    pm.environment.set('table_column_varchar_50_id',columns_7_id);\r",
									"    const columns_8_id = jsonData.columns[8].id;\r",
									"    pm.environment.set('table_column_varchar_255_id',columns_8_id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Update Asset Table- Not Set Default Value",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(`Update table name compare`, function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property(\"isSuccess\").to.equal(false);\r",
									"    pm.expect(json).to.have.property(\"errorCode\").to.equal(\"ERROR.ENTITY.VALIDATION\");\r",
									"    pm.expect(json).to.have.property(\"detailCode\").to.equal(\"ERROR.ENTITY.VALIDATION\");\r",
									"    pm.expect(json).to.have.property(\"fields\").to.be.an(\"array\").to.have.property(\"length\").to.gt(0);\r",
									"    pm.expect(json.fields[0]).to.have.property(\"name\").to.equal(\"DefaultValue\");\r",
									"    pm.expect(json.fields[0]).to.have.property(\"errorCode\").to.equal(\"ERROR.ENTITY.VALIDATION.FIELD_REQUIRED\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$timestamp}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_int_id}},\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"no\",\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"col_bigint_update\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"update\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_bool_id}},\r\n            \"name\": \"col_bool_update\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\",\r\n            \"action\": \"update\",\r\n            \"order\": 7\r\n        },\r\n        {\r\n            \"id\": {{table_column_real_id}},\r\n            \"name\": \"col_real_update\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\",\r\n            \"action\": \"update\",\r\n            \"order\": 6\r\n        },\r\n        {\r\n            \"id\": {{table_column_text_id}},\r\n            \"name\": \"col_text_update\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 5\r\n        },\r\n        {\r\n            \"id\": {{table_column_timestamp_id}},\r\n            \"name\": \"col_timestamp_update\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"6956909964\",\r\n            \"action\": \"update\",\r\n            \"order\": 4\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_25_id}},\r\n            \"name\": \"col_varchar25_update\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 3\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_50_id}},\r\n            \"name\": \"col_varchar50_update\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 2\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_255_id}},\r\n            \"name\": \"col_varchar255_update\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 1\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"add\",\r\n            \"order\": 17\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"action\": \"add\",\r\n            \"order\": 18\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(`Update table name compare`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('name');\r",
									"\r",
									"    const postRequest = JSON.parse(request.data);\r",
									"    pm.expect(jsonData).to.have.property('name', postRequest.name);\r",
									"\r",
									"    const name = jsonData.name;\r",
									"    pm.environment.set('table_name', name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{table_name_1}}_1\",\r\n    \"description\": \"table of {{asset_id}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_int_id}},\r\n            \"name\": \"col_int_1\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"no\",\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"col_bigint_update\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"update\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_50_id}},\r\n            \"name\": \"col_varchar50_update\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"change default value\",\r\n            \"action\": \"delete\",\r\n            \"order\": 2\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"add\",\r\n            \"order\": 18\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Update Asset Table- Table Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fail Update Asset Table- Table Not Found has status code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Fail Add Table- Name Duplicate\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$timestamp}}\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_int_id}},\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"no\",\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"col_bigint_update\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"update\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_bool_id}},\r\n            \"name\": \"col_bool_update\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\",\r\n            \"action\": \"update\",\r\n            \"order\": 7\r\n        },\r\n        {\r\n            \"id\": {{table_column_real_id}},\r\n            \"name\": \"col_real_update\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\",\r\n            \"action\": \"update\",\r\n            \"order\": 6\r\n        },\r\n        {\r\n            \"id\": {{table_column_text_id}},\r\n            \"name\": \"col_text_update\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 5\r\n        },\r\n        {\r\n            \"id\": {{table_column_timestamp_id}},\r\n            \"name\": \"col_timestamp_update\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"6956909964\",\r\n            \"action\": \"update\",\r\n            \"order\": 4\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_25_id}},\r\n            \"name\": \"col_varchar25_update\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 3\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_50_id}},\r\n            \"name\": \"col_varchar50_update\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 2\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_255_id}},\r\n            \"name\": \"col_varchar255_update\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 1\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"add\",\r\n            \"order\": 17\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"add\",\r\n            \"order\": 18\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{$guid}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Update Asset Table- Name Duplicate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fail Update Asset Table- Name Duplicate has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Fail Add Table- Name Duplicate\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
									"    pm.expect(jsonData.fields[0].name).to.equal('Name');\r",
									"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_DUPLICATED');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{table_name_1}}_1\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_int_id}},\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"no\",\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"col_bigint_update\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"update\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_bool_id}},\r\n            \"name\": \"col_bool_update\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\",\r\n            \"action\": \"update\",\r\n            \"order\": 7\r\n        },\r\n        {\r\n            \"id\": {{table_column_real_id}},\r\n            \"name\": \"col_real_update\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\",\r\n            \"action\": \"update\",\r\n            \"order\": 6\r\n        },\r\n        {\r\n            \"id\": {{table_column_text_id}},\r\n            \"name\": \"col_text_update\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 5\r\n        },\r\n        {\r\n            \"id\": {{table_column_timestamp_id}},\r\n            \"name\": \"col_timestamp_update\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"6956909964\",\r\n            \"action\": \"update\",\r\n            \"order\": 4\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_25_id}},\r\n            \"name\": \"col_varchar25_update\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 3\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_50_id}},\r\n            \"name\": \"col_varchar50_update\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 2\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_255_id}},\r\n            \"name\": \"col_varchar255_update\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"update\",\r\n            \"order\": 1\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"add\",\r\n            \"order\": 17\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"add\",\r\n            \"order\": 18\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id_2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Update Asset Table- Update schema with system columns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fail Update Asset Table- Name Duplicate has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(\"Fail Add Table- Name Duplicate\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"ERROR.VALIDATION.FAILED\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.VALIDATION');\r",
									"    pm.expect(jsonData.fields[0].name).to.equal('Columns.Name[0]');\r",
									"    pm.expect(jsonData.fields[0].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
									"    pm.expect(jsonData.fields[1].name).to.equal('Columns.Name[1]');\r",
									"    pm.expect(jsonData.fields[1].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
									"    pm.expect(jsonData.fields[2].name).to.equal('Columns.Name[2]');\r",
									"    pm.expect(jsonData.fields[2].errorCode).to.equal('ERROR.ENTITY.VALIDATION.FIELD_INVALID');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{table_name_1}}_1\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"created_by\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"update\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_bool_id}},\r\n            \"name\": \"created_utc\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\",\r\n            \"action\": \"update\",\r\n            \"order\": 7\r\n        },\r\n        {\r\n            \"id\": {{table_column_real_id}},\r\n            \"name\": \"updated_utc\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\",\r\n            \"action\": \"update\",\r\n            \"order\": 6\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id_2}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id_2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Asset Table For Asset Lv3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has table id\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    const id = jsonData.id;\r",
									"    const name = jsonData.name;\r",
									"    pm.environment.set(\"table_id_lv3\", id);\r",
									"    pm.environment.set(\"table_name_lv3\", name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$timestamp}}_lv3\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_level3_id}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_level3_id}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has data\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.totalCount).to.be.above(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset Table by Id With Asset Lv3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(`Has table name ${pm.environment.get('table_name_lv3')}`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('name',pm.environment.get('table_name_lv3'));\r",
									"});\r",
									"pm.test(`Match with table id ${pm.environment.get('table_id_lv3')}`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.equal(pm.environment.get('table_id_lv3'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id_lv3}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id_lv3}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Asset Table by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(`Has table name ${pm.environment.get('table_name')}`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('name',pm.environment.get('table_name'));\r",
									"});\r",
									"pm.test(`Match with table id ${pm.environment.get('table_id')}`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.id).to.be.equal(pm.environment.get('table_id'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Get Asset Table by Id- Table Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fail Get Asset Table by Id- Table Not Found has status code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(\"Fail Get Asset Table by Id- Table Not Found\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{$guid}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{$guid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Asset Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(`Delete table id ${pm.environment.get('table_id')}`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"{{table_id}}\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Delete Asset Tables- Table Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fail Delete Asset Tables- Table Not Found has status code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(`Fail Delete Asset Tables- Table Not Found`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.NOT_FOUND.SOME_ITEMS_DELETED');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"{{$guid}}\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Asset Template - Static",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Add Element Template 2\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    const id =  jsonData.id;\r",
									"   pm.environment.set(\"asset_template_id\", id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"F_tem2_{{$guid}}\",\r\n    \"attributes\": [\r\n            {\r\n                \"AssetTemplateId\":null,\r\n                \"name\": \"Prop tem 2 {{$timestamp}}\",\r\n                \"value\": \"\",\r\n                \"dataType\": \"text\",\r\n                \"attributeType\": \"static\",\r\n                \"UomId\": 1\r\n            }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{device-service}}/dev/assettemplates",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assettemplates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asset Template By Id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Asset Template By Id\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.eql(pm.environment.get(\"asset_template_id\"));\r",
									"\r",
									"    const attributes_0_id = json.attributes[0].id\r",
									"    pm.environment.set(\"attribute_templates_static_id\", attributes_0_id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{device-service}}/dev/assettemplates/{{asset_template_id}}",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assettemplates",
								"{{asset_template_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Asset : Add With Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Save Action Element in Tree\", function () {\r",
									"    const json = pm.response.json();\r",
									"    const data_0_values_id =  json.data[0].values.id;\r",
									"    pm.expect(json).to.have.property('data').to.be.a(\"array\");\r",
									"    pm.environment.set(\"asset_id_2\", data_0_values_id); \r",
									"   \r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n    \"op\": \"add\",\r\n    \"path\": \"/{{asset_id}}\",\r\n    \"value\": {\r\n        \"name\": \"F01_{{$guid}}\",\r\n        \"parentAssetId\": \"{{asset_id}}\",\r\n        \"assetTemplateId\":\"{{asset_template_id}}\",\r\n        \"mappings\":[\r\n            \r\n        ]    \r\n    }\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{device-service}}/dev/assets/edit",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assets",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Asset Table 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has table id\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    const id = jsonData.id;\r",
									"    pm.environment.set(\"table_id\", id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$timestamp}}_2\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"column_a\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"INT\",\r\n            \"isPrimary\": 1,\r\n            \"defaultValue\": \"0\"\r\n        },\r\n        {\r\n            \"name\": \"column_b\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"defaultValue\": \"7956909964\"\r\n        },\r\n        {\r\n            \"name\": \"column_c\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"VA25\",\r\n            \"isPrimary\": 0,\r\n            \"defaultValue\": \"Default value\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id_2}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id_2}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Tables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Search Tables\", function () {\r",
									"    const json = pm.response.json();\r",
									"    const details = json.data[0];\r",
									"    pm.expect(details.id).to.be.a(\"string\");\r",
									"    pm.expect(details.name).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageIndex\" : \"0\",\r\n    \"pageSize\" : \"20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id_2}}/tables/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id_2}}",
								"tables",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Table List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Search Table List\", function () {\r",
									"    const json = pm.response.json();\r",
									"    const details = json.data[0];\r",
									"    pm.expect(details.id).to.be.a(\"string\");\r",
									"    pm.expect(details.name).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageIndex\":0,\r\n    \"pageSize\":30,\r\n    \"filter\":\"\",\r\n    \"clientOverride\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tablelist/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tablelist",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Table List with filter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Search Table List\", function () {\r",
									"    const json = pm.response.json();\r",
									"    const details = json.data[0];\r",
									"    pm.expect(details.id).to.be.a(\"string\");\r",
									"    pm.expect(details.name).to.be.contain(\"lv3\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageIndex\":0,\r\n    \"pageSize\":30,\r\n    \"filter\":\"{\\\"QueryKey\\\":\\\"assetName\\\",\\\"QueryValue\\\":\\\"_lv3\\\",\\\"Operation\\\":\\\"contains\\\",\\\"QueryType\\\":\\\"text\\\"}\",\r\n    \"clientOverride\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tablelist/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tablelist",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Table Of Asset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Search Table Of Asset\", function () {\r",
									"    const json = pm.response.json();\r",
									"    const details = json.data[0];\r",
									"    pm.expect(details.id).to.be.a(\"string\");\r",
									"    pm.expect(details.name).to.be.a(\"string\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageIndex\" : \"0\",\r\n    \"pageSize\" : \"20\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id_2}}/tables/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id_2}}",
								"tables",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tables List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(`Delete Tables List ${pm.environment.get('table_id')}`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\"{{table_id}}\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tablelist",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tablelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tables List- Non passing table id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Tables List- Non passing table id has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(`Delete Tables List- Non passing table id`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tablelist",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tablelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fail Delete Tables List- Table Not Found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Fail Delete Tables List- Table Not Found has status code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"pm.test(`Fail Delete Tables List- Table Not Found`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityNotFoundException' was thrown.\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.NOT_FOUND');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.NOT_FOUND.SOME_ITEMS_DELETED');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ids\": [\r\n        \"{{table_id}}\",\r\n        \"{{$guid}}\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tablelist",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tablelist"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Asset Table 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has table id\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    const id = jsonData.id;\r",
									"    const name = jsonData.name;\r",
									"    pm.environment.set(\"table_id\", id);\r",
									"    pm.environment.set(\"table_name\", name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$timestamp}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"column_a\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"INT\",\r\n            \"isPrimary\": 1,\r\n            \"defaultValue\": \"0\"\r\n        },\r\n        {\r\n            \"name\": \"column_b\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"defaultValue\": \"7956909964\"\r\n        },\r\n        {\r\n            \"name\": \"column_c\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"typename\": \"datetime\",\r\n            \"isPrimary\": 0,\r\n            \"defaultValue\": \"2020-05-05T09:09:09:0000\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset Table 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Asset Table 3 success\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(`Update Asset Table 3 has payload`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('name');\r",
									"    const name = jsonData.name;\r",
									"\r",
									"    console.log(name);\r",
									"    console.log(pm.environment.get('table_name'));\r",
									"\r",
									"    pm.expect(name).to.not.equals(pm.environment.get('table_name'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{$timestamp}}_updated\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"column_a\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"INT\",\r\n            \"isPrimary\": 1,\r\n            \"defaultValue\": \"0\"\r\n        },\r\n        {\r\n            \"name\": \"column_b\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"TIMESTAMP\",\r\n            \"isPrimary\": 0,\r\n            \"defaultValue\": \"7956909964\"\r\n        },\r\n        {\r\n            \"name\": \"column_c\",\r\n            \"typecode\": \"DATETIME\",\r\n            \"typename\": \"datetime\",\r\n            \"isPrimary\": 0,\r\n            \"defaultValue\": \"2020-05-05T09:09:09:0000\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Table Data- Insert Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Upsert Table Data- Insert Case has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(`Upsert Table Data- Insert Case`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.be.equal(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"column_a\": 1,\r\n        \"column_b\": 1,\r\n        \"column_c\": \"2020-05-05T09:09:09:0000\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"column_a\": 2,\r\n        \"column_b\": 2,\r\n        \"column_c\": \"2020-05-05T09:09:09:0000\",\r\n        \"$action\": \"add\"\r\n    },\r\n    {\r\n        \"column_a\": 3,\r\n        \"column_b\": 3,\r\n        \"column_c\": \"2020-05-05T09:09:09:0000\",\r\n        \"$action\": \"add\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/insert",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}",
								"insert"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Table Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Search Table List\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property('pageIndex').to.be.a(\"number\");\r",
									"    pm.expect(json).to.have.property('pageSize').to.be.a(\"number\");\r",
									"    pm.expect(json).to.have.property('totalPage').to.be.a(\"number\");\r",
									"    pm.expect(json).to.have.property('totalCount').to.be.a(\"number\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"pageIndex\":0,\r\n    \"pageSize\":20,\r\n    \"filter\":\"\",\r\n    \"clientOverride\":true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}/search",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}",
								"search"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Archive/Retrieve",
			"item": [
				{
					"name": "Mockup request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Mock request status code should equal 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const json = pm.response.json();\r",
									"    const args_automationTest = json.args.automationTest;\r",
									"    pm.environment.set(\"tenant_name\", args_automationTest);\r",
									"    pm.environment.set(\"location_name\", args_automationTest);\r",
									"\r",
									"    const args_tablename = json.args.tablename;\r",
									"    pm.environment.set(\"table_name_1\", args_tablename);\r",
									"\r",
									"    const args_asset_level1_name = json.args.asset_level1_name;\r",
									"    pm.environment.set(\"asset_level1_name\", args_asset_level1_name);\r",
									"    const args_asset_level2_name = json.args.asset_level2_name;\r",
									"    pm.environment.set(\"asset_level2_name\", args_asset_level2_name);\r",
									"    const args_asset_level3_name = json.args.asset_level3_name;\r",
									"    pm.environment.set(\"asset_level3_name\", args_asset_level3_name);\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{mockup-service}}/get?automationTest=automation_test&tablename=tbname_{{$timestamp}}&asset_level1_name=a_lv1_{{$timestamp}}&asset_level2_name=a_lv2_{{$timestamp}}&asset_level3_name=a_lv3_{{$timestamp}}",
							"host": [
								"{{mockup-service}}"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "automationTest",
									"value": "automation_test"
								},
								{
									"key": "tablename",
									"value": "tbname_{{$timestamp}}"
								},
								{
									"key": "asset_level1_name",
									"value": "a_lv1_{{$timestamp}}"
								},
								{
									"key": "asset_level2_name",
									"value": "a_lv2_{{$timestamp}}"
								},
								{
									"key": "asset_level3_name",
									"value": "a_lv3_{{$timestamp}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upsert Asset (level 1)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Request success\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Request has response\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.have.property('data').to.be.a(\"array\");\r",
									"    const data_0_values_id = json.data[0].values.id;\r",
									"    const data_0_values_name = json.data[0].values.name;\r",
									"    pm.environment.set(\"asset_level1_id\", data_0_values_id);\r",
									"    pm.environment.set(\"asset_level1_name\", data_0_values_name);\r",
									"    pm.environment.set(\"asset_id\", data_0_values_id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"op\": \"add\",\r\n        \"path\": \"/\",\r\n        \"type\": \"editing\",\r\n        \"key\": \"ID_TEMP_1\",\r\n        \"parentId\": \"__no_parent_element__\",\r\n        \"assetTemplateId\": null,\r\n        \"name\": \"{{asset_level1_name}}\",\r\n        \"deleted\": false,\r\n        \"value\": {\r\n            \"children\": [],\r\n            \"parentId\": \"__no_parent_element__\",\r\n            \"parentAssetId\": null,\r\n            \"name\": \"{{asset_level1_name}}\",\r\n            \"deleted\": false,\r\n            \"assetTemplateId\": null\r\n            \r\n        }\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{device-service}}/dev/assets/edit",
							"host": [
								"{{device-service}}"
							],
							"path": [
								"dev",
								"assets",
								"edit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Archive Tables OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Archive asset tables returns status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Archive asset tables has data\", function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('tables');",
									"    pm.expect(jsonData).to.have.property('assetTables');",
									"",
									"    var data = {",
									"        tables: jsonData.tables,",
									"        assetTables: jsonData.assetTables",
									"    };",
									"",
									"    pm.environment.set(\"archived_tables_data\", JSON.stringify(JSON.stringify(data)));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"archived_at\", pm.variables.replaceIn(\"{{$isoTimestamp}}\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"archiveTime\": \"{{archived_at}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Asset Table After Archived",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Has table id\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"    const id = jsonData.id;\r",
									"    pm.environment.set(\"table_id\", id);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{table_name_1}}\",\r\n    \"columns\": [\r\n        {\r\n            \"name\": \"col_int\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_bigint\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123\"\r\n        },\r\n        {\r\n            \"name\": \"col_bool\",\r\n            \"typecode\": \"BOOL\",\r\n            \"typename\": \"boolean\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"true\"\r\n        },\r\n        {\r\n            \"name\": \"col_real\",\r\n            \"typecode\": \"REAL\",\r\n            \"typename\": \"real\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"123.123\"\r\n        },\r\n        {\r\n            \"name\": \"col_text\",\r\n            \"typecode\": \"TEXT\",\r\n            \"typename\": \"Text\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\"\r\n        },\r\n        {\r\n            \"name\": \"col_timestamp\",\r\n            \"typecode\": \"TIMESTAMP\",\r\n            \"typename\": \"timestamp\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"1656909964\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar25\",\r\n            \"typecode\": \"VA25\",\r\n            \"typename\": \"Varchar(25)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar50\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"this is text\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "Should Archive Asset Tables Without Table Added After Archived Time",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Archive asset tables returns status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Archive asset tables should not contain table added after archived time\", function () {",
									"    const jsonData = pm.response.json();",
									"",
									"    pm.expect(jsonData).to.have.property('tables');",
									"",
									"    var exists = jsonData.tables.some(x => x.id == pm.environment.get('table_id'));",
									"   ",
									"    pm.expect(exists).to.be.false;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"archiveTime\": \"{{archived_at}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');\r",
									"pm.environment.set('retrieve_asset_table_id', uuid.v4());\r",
									"\r",
									"var id = 200;\r",
									"pm.environment.set('column_id_1', id++);\r",
									"pm.environment.set('column_id_2', id++);\r",
									"pm.environment.set('column_id_3', id++);\r",
									"pm.environment.set('column_id_4', id++);\r",
									"pm.environment.set('column_id_5', id++);\r",
									"pm.environment.set('column_id_6', id++);\r",
									"pm.environment.set('column_id_7', id++);\r",
									"pm.environment.set('column_id_8', id++);\r",
									"pm.environment.set('column_id_9', id++);\r",
									"pm.environment.set('column_id_10', id++);\r",
									"pm.environment.set('column_id_11', id++);\r",
									"pm.environment.set('column_id_12', id++);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Table Id is guid empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_00000000-0000-0000-0000-000000000000\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_00000000-0000-0000-0000-000000000000\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_00000000-0000-0000-0000-000000000000\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Table Name is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Asset Id is guid empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/00000000-0000-0000-0000-000000000000\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Table does not have column",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": []\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Column Name is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Column TypeCode is empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Column TableId is guid empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"00000000-0000-0000-0000-000000000000\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Asset Table Name is wrong pattern",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"a_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify - Failed - Asset Table Data is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": null\\r\\n        }\\r\\n    ]\\r\\n}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/archive/verify",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"archive",
								"verify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Retrieve Asset Tables OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Retrieve asset tables returns status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var uuid = require('uuid');\r",
									"\r",
									"pm.environment.set('retrieve_asset_table_id', uuid.v4());\r",
									"pm.environment.set(\"retrieving_upn\",\"thanh.tran@yokogawa.com\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\",\n    \"Upn\": \"{{retrieving_upn}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/retrieve",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"retrieve"
							]
						}
					},
					"response": []
				},
				{
					"name": "Faild Retrieve Asset Table - ID Existed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Retrieve asset tables returns status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Data\": \"{\\r\\n    \\\"tables\\\": [\\r\\n        {\\r\\n            \\\"id\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"name\\\": \\\"table_Monday_677\\\",\\r\\n            \\\"oldName\\\": \\\"table_Tuesday_666\\\",\\r\\n            \\\"script\\\": \\\"drop table if exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\";\\\\r\\\\ncreate table if not exists \\\\\\\"asset_{{retrieve_asset_table_id}}\\\\\\\" (\\\\\\\"col_BIGIN\\\\\\\" real  primary key,\\\\\\\"col_REAL\\\\\\\" bigint not null,\\\\\\\"col_BOOL\\\\\\\" int not null,\\\\\\\"col_INT\\\\\\\" boolean not null,\\\\\\\"col_DOUBLE\\\\\\\" double precision not null,\\\\\\\"col_DECIMAL\\\\\\\" double precision not null,\\\\\\\"col_TEXT\\\\\\\" bigint not null,\\\\\\\"col_TIMESTAMP\\\\\\\" text not null,\\\\\\\"col_DATETIME\\\\\\\" varchar(25) not null,\\\\\\\"col_VA25\\\\\\\" timestamp without time zone not null,\\\\\\\"col_VA255\\\\\\\" varchar(50) not null,\\\\\\\"col_VA50\\\\\\\" varchar(255) not null);\\\",\\r\\n            \\\"assetId\\\": \\\"f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"deleted\\\": false,\\r\\n            \\\"assetName\\\": \\\"a_lv1_1682233557\\\",\\r\\n            \\\"resourcePath\\\": \\\"objects/f714b877-a201-4c6a-8eb4-575a923d5d1c\\\",\\r\\n            \\\"columns\\\": [\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_1}},\\r\\n                    \\\"name\\\": \\\"col_BIGIN\\\",\\r\\n                    \\\"isPrimary\\\": true,\\r\\n                    \\\"typeCode\\\": \\\"REAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_2}},\\r\\n                    \\\"name\\\": \\\"col_VA255\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA50\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_3}},\\r\\n                    \\\"name\\\": \\\"col_VA25\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DATETIME\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_4}},\\r\\n                    \\\"name\\\": \\\"col_DATETIME\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA25\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_5}},\\r\\n                    \\\"name\\\": \\\"col_TIMESTAMP\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TEXT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_6}},\\r\\n                    \\\"name\\\": \\\"col_TEXT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"TIMESTAMP\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_7}},\\r\\n                    \\\"name\\\": \\\"col_DECIMAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DOUBLE\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_8}},\\r\\n                    \\\"name\\\": \\\"col_DOUBLE\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"DECIMAL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_9}},\\r\\n                    \\\"name\\\": \\\"col_INT\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BOOL\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_10}},\\r\\n                    \\\"name\\\": \\\"col_BOOL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"INT\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_11}},\\r\\n                    \\\"name\\\": \\\"col_REAL\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"BIGIN\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                },\\r\\n                {\\r\\n                    \\\"id\\\": {{column_id_12}},\\r\\n                    \\\"name\\\": \\\"col_VA50\\\",\\r\\n                    \\\"isPrimary\\\": false,\\r\\n                    \\\"typeCode\\\": \\\"VA255\\\",\\r\\n                    \\\"defaultValue\\\": \\\"\\\",\\r\\n                    \\\"allowNull\\\": false,\\r\\n                    \\\"tableId\\\": \\\"{{retrieve_asset_table_id}}\\\",\\r\\n                    \\\"columnOrder\\\": 0\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ],\\r\\n    \\\"assetTables\\\": [\\r\\n        {\\r\\n            \\\"tableName\\\": \\\"asset_{{retrieve_asset_table_id}}\\\",\\r\\n            \\\"data\\\": [\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 1.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 2.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                },\\r\\n                {\\r\\n                    \\\"col_BIGIN\\\": 3.0,\\r\\n                    \\\"col_REAL\\\": 1,\\r\\n                    \\\"col_BOOL\\\": 1,\\r\\n                    \\\"col_INT\\\": true,\\r\\n                    \\\"col_DOUBLE\\\": 1.1,\\r\\n                    \\\"col_DECIMAL\\\": 1.1,\\r\\n                    \\\"col_TEXT\\\": 1682233564,\\r\\n                    \\\"col_TIMESTAMP\\\": \\\"text\\\",\\r\\n                    \\\"col_DATETIME\\\": \\\"text\\\",\\r\\n                    \\\"col_VA25\\\": \\\"2023-01-01T12:12:12:0000\\\",\\r\\n                    \\\"col_VA255\\\": \\\"text\\\",\\r\\n                    \\\"col_VA50\\\": \\\"text\\\"\\r\\n                }\\r\\n            ]\\r\\n        }\\r\\n    ]\\r\\n}\",\n    \"Upn\": \"{{retrieving_upn}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/retrieve",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"retrieve"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lock Table Schema",
			"item": [
				{
					"name": "Authentication - New Client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Get access token has value\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('access_token');\r",
									"   pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{new_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{new_client_secret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{idp}}/connect/token",
							"host": [
								"{{idp}}"
							],
							"path": [
								"connect",
								"token"
							]
						},
						"description": "Connect to the IDP and get the access token"
					},
					"response": []
				},
				{
					"name": "Get User Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"The request has status code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response has data\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('id');\r",
									"    const upn = jsonData.upn;\r",
									"    pm.environment.set(\"upn\", upn);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{user-service}}/usr/users/info?forceUpdate=true",
							"host": [
								"{{user-service}}"
							],
							"path": [
								"usr",
								"users",
								"info"
							],
							"query": [
								{
									"key": "forceUpdate",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Lock Entity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Lock Entity return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{entity-service}}/ent/locks/{{table_id}}/lock",
							"host": [
								"{{entity-service}}"
							],
							"path": [
								"ent",
								"locks",
								"{{table_id}}",
								"lock"
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentication - Admin",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get access token return status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Get access token has value\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('access_token');\r",
									"   pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "{{sa_client_id}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{sa_client_secret}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{idp}}/connect/token",
							"host": [
								"{{idp}}"
							],
							"path": [
								"connect",
								"token"
							]
						},
						"description": "Connect to the IDP and get the access token"
					},
					"response": []
				},
				{
					"name": "Update Asset Table - Changed schema - FAILED",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"pm.test(`Update Asset Table - Changed schema - FAILED`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.has.property('isSuccess');\r",
									"    pm.expect(jsonData.isSuccess).to.equal(false);\r",
									"    pm.expect(jsonData.message).to.include(\"Exception of type 'AHI.Infrastructure.Exception.EntityAlreadyLockException' was thrown.\");\r",
									"    pm.expect(jsonData.errorCode).to.equal('ERROR.ENTITY.LOCK.ALREADY_LOCKED');\r",
									"    pm.expect(jsonData.detailCode).to.equal('ERROR.ENTITY.LOCK.ALREADY_LOCKED');\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{table_name_1}}_1\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_int_id}},\r\n            \"name\": \"col_int_1\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"update\",\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"col_bigint_update\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"no\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_50_id}},\r\n            \"name\": \"col_varchar50_update\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"change default value\",\r\n            \"action\": \"no\",\r\n            \"order\": 2\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"no\",\r\n            \"order\": 18\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Asset Table - Not changed schema - OK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Has status code 202\", function () {\r",
									"    pm.response.to.have.status(202);\r",
									"});\r",
									"pm.test(`Update table name compare`, function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('name');\r",
									"\r",
									"    const postRequest = JSON.parse(request.data);\r",
									"    pm.expect(jsonData).to.have.property('name', postRequest.name);\r",
									"\r",
									"    const name = jsonData.name;\r",
									"    pm.environment.set('table_name', name);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{table_name_1}}_1\",\r\n    \"columns\": [\r\n        {\r\n            \"id\": {{table_column_int_id}},\r\n            \"name\": \"col_int_1\",\r\n            \"typecode\": \"INT\",\r\n            \"typename\": \"Int\",\r\n            \"isPrimary\": 1,\r\n            \"allowNull\": 0,\r\n            \"defaultValue\": \"\",\r\n            \"action\": \"no\",\r\n            \"order\": 0\r\n        },\r\n        {\r\n            \"id\": {{table_column_big_int_id}},\r\n            \"name\": \"col_bigint_update\",\r\n            \"typecode\": \"BIGIN\",\r\n            \"typename\": \"bigint\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"123\",\r\n            \"action\": \"no\",\r\n            \"order\": 8\r\n        },\r\n        {\r\n            \"id\": {{table_column_varchar_50_id}},\r\n            \"name\": \"col_varchar50_update\",\r\n            \"typecode\": \"VA50\",\r\n            \"typename\": \"Varchar(50)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"change default value\",\r\n            \"action\": \"no\",\r\n            \"order\": 2\r\n        },\r\n        {\r\n            \"name\": \"col_varchar255_new_{{$timestamp}}\",\r\n            \"typecode\": \"VA255\",\r\n            \"typename\": \"Varchar(255)\",\r\n            \"isPrimary\": 0,\r\n            \"allowNull\": 1,\r\n            \"defaultValue\": \"this is text\",\r\n            \"action\": \"no\",\r\n            \"order\": 18\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/tbl/tables/asset/{{asset_id}}/tables/{{table_id}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"tbl",
								"tables",
								"asset",
								"{{asset_id}}",
								"tables",
								"{{table_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/*",
					"BIGIN = \"bigint\"",
					"BOOL = \"boolean\"",
					"INT = \"int\"",
					"REAL = \"real\"",
					"DOUBLE =\"double precision\"",
					"DECIMAL =\"double precision\"",
					"TEXT = \"text\"",
					"TIMESTAMP = \"bigint\"",
					"DATETIME = \"timestamp without time zone\"",
					"VA25 = \"varchar(25)\"",
					"VA255 = \"varchar(255)\"",
					"VA50 = \"varchar(50)\"",
					"*/"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}